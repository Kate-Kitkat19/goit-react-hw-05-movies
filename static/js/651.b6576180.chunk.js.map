{"version":3,"file":"static/js/651.b6576180.chunk.js","mappings":"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","sources":["API/MovieDB.js","pages/Home/Home.styled.js","components/ListOfMovies/ListOfMovies.jsx","components/NotFound/NotFound.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'ebab474729c7a7a042d3e1e294ace7e8';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n\nexport const getMovieByKey = async query => {\n  const normalizedQuery = query.trim().toLowerCase();\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&query=${normalizedQuery}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n\nexport const getMoviebyId = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const Title = styled.h2`\n  font-size: 35px;\n  margin: 0;\n  padding: 0;\n  color: #1d3557;\n  font-family: 'Crimson Text', serif;\n  text-align: center;\n`;\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #1d3557;\n  font-size: 20px;\n  &:visited {\n    color: #1d3557;\n  }\n  &:hover,\n  &:focus {\n    color: #14213d;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MoviesList, StyledLink } from 'pages/Home/Home.styled';\nimport PropTypes from 'prop-types';\n\nexport const ListOfMovies = ({ films }) => {\n  const location = useLocation();\n  \n  return (\n    <MoviesList>\n      {films.map(({ title, id: movieId }) => {\n        return (\n          <StyledLink\n            to={`${movieId}`}\n            state={{ from: location }}\n            key={movieId}\n          >\n            <li>{title}</li>\n          </StyledLink>\n        );\n      })}\n    </MoviesList>\n  );\n};\n\nListOfMovies.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","\n\nexport const NotFound = () => {\n  return <h3>Sorry, your request was not successful</h3>;\n};\n","import styled from 'styled-components';\n\nexport const StyledLoaderWrap = styled.div`\n  background-color: rgba(0, 0, 0, 0.2);\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1299;\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { StyledLoaderWrap } from './Loader.styled';\nimport { createPortal } from 'react-dom';\n\nexport const Loader = () => {\n  return createPortal(\n    <StyledLoaderWrap>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </StyledLoaderWrap>,\n    document.getElementById('loader')\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  outline: 0px;\n  border: 0px;\n  margin: 0px;\n  cursor: pointer;\n  user-select: none;\n  vertical-align: middle;\n  appearance: none;\n  text-decoration: none;\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  min-width: 64px;\n  padding: 6px 18px;\n  border-radius: 4px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  color: white;\n  background-color: #a8dadc;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px,\n    rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;\n  &:hover,\n  &:focus {\n    background-color: #457b9d;\n    box-shadow: rgb(0 0 0 / 20%) 0px 2px 4px -1px,\n      rgb(0 0 0 / 14%) 0px 4px 5px 0px, rgb(0 0 0 / 12%) 0px 1px 10px 0px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 200px;\n  outline: none;\n  height: 30px;\n  border: 1px solid #a8dadc;\n  border-radius: 4px;\n  padding: 5px 10px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n  justify-content: center;\n`;\n","import { Form, SearchBtn, StyledInput } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ onSubmit, value }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <StyledInput\n        type=\"text\"\n        placeholder=\"What you`re looking for?\"\n        name=\"query\"\n        defaultValue={value}\n      ></StyledInput>\n      <SearchBtn type=\"submit\" >\n        Search\n      </SearchBtn>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  \n};\n","import { getMovieByKey } from 'API/MovieDB';\nimport { useEffect, useState } from 'react';\nimport { ListOfMovies } from 'components/ListOfMovies/ListOfMovies';\nimport { NotFound } from 'components/NotFound/NotFound';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [params, setParams] = useSearchParams();\n\n  const query = params.get('query') ?? '';\n\n  useEffect(() => {\n    const isQuerySet = query !== '';\n    if (isQuerySet) {\n      setIsLoading(true);\n      setError(null);\n      setFilms([]);\n      getMovieByKey(query)\n        .then(data => {\n          if (data.length === 0) {\n            setError(true);\n          } else {\n            setFilms(data);\n          }\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, [query]);\n\n  function onSubmit(evt) {\n    evt.preventDefault();\n    const currentQuery = evt.currentTarget.elements.query.value;\n    setParams(currentQuery !== '' ? { query: currentQuery } : '');\n    evt.currentTarget.reset();\n  }\n\n  return (\n    <>\n      <SearchForm\n        onSubmit={onSubmit}\n        value={params.get('query') ?? ''}\n      ></SearchForm>\n      {isLoading && <Loader></Loader>}\n      {error !== null && <NotFound></NotFound>}\n      {films.length > 0 && <ListOfMovies films={films}></ListOfMovies>}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","KEY","getTrendingMovies","axios","response","data","results","console","error","getMovieByKey","query","normalizedQuery","trim","toLowerCase","getMoviebyId","id","getMovieCast","cast","getMovieReviews","Title","styled","MoviesList","StyledLink","Link","ListOfMovies","films","location","useLocation","map","title","movieId","to","state","from","NotFound","StyledLoaderWrap","Loader","createPortal","strokeColor","strokeWidth","animationDuration","width","visible","document","getElementById","SearchBtn","StyledInput","Form","SearchForm","onSubmit","value","type","placeholder","name","defaultValue","useState","setFilms","setError","isLoading","setIsLoading","useSearchParams","params","setParams","get","useEffect","then","length","finally","evt","preventDefault","currentQuery","currentTarget","elements","reset"],"sourceRoot":""}