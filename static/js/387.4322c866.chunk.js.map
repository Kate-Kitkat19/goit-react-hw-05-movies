{"version":3,"file":"static/js/387.4322c866.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAM,mCAECC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAHd,cAEvBG,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,gCAO9BC,QAAQC,MAAM,gCAPgB,yDAAH,qDAWjBC,EAAa,mCAAG,WAAMC,GAAN,gFACrBC,EAAkBD,EAAME,OAAOC,cADV,kBAGFV,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC2BU,EAD3B,gCAHE,cAGnBP,EAHmB,yBAMlBA,EAASC,KAAKC,SANI,gCAQ1BC,QAAQC,MAAM,gCARY,yDAAH,sDAYbM,EAAY,mCAAG,WAAMC,GAAN,gGAEDZ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDe,EADC,oBACad,EADb,oBAFC,cAElBG,EAFkB,yBAKjBA,EAASC,MALQ,gCAOzBE,QAAQC,MAAM,gCAPW,yDAAH,sDAWZQ,EAAY,mCAAG,WAAMD,GAAN,gGAEDZ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDe,EADC,4BACqBd,EADrB,oBAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKY,MALG,gCAOzBV,QAAQC,MAAM,gCAPW,yDAAH,sDAWZU,EAAe,mCAAG,WAAMH,GAAN,gGAEJZ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDe,EADC,4BACqBd,EADrB,2BAFI,cAErBG,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO5BC,QAAQC,MAAM,gCAPc,yDAAH,qD,yIChDfW,EAAiBC,EAAAA,GAAAA,GAAH,yLAWdC,EAAOD,EAAAA,GAAAA,GAAH,2IAQJE,EAAcF,EAAAA,GAAAA,IAAH,kE,SCoBxB,EAnCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAON,EAAP,KAAaO,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAaS,GAASG,KAAKJ,EAC5B,GAAE,CAACC,IAIJ,OACE,0BACE,SAACN,EAAD,UACGF,EAAKY,KAAI,SAAAC,GACR,IAAQC,EAAsCD,EAAtCC,UAAWC,EAA2BF,EAA3BE,KAAMjB,EAAqBe,EAArBf,GAAIkB,EAAiBH,EAAjBG,aACvBC,EACa,OAAjBD,EAAA,UARI,uCAQJ,OACkBA,GACd,+EACN,OACE,UAACZ,EAAD,YACE,SAACC,EAAD,CACEa,IAAG,UAAKD,GACRE,IAAKJ,EACLK,MAAM,QAJV,WAMOL,EANP,eAMkBD,KANPhB,EASd,OAIR,C","sources":["API/MovieDB.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'ebab474729c7a7a042d3e1e294ace7e8';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n\nexport const getMovieByKey = async query => {\n  const normalizedQuery = query.trim().toLowerCase();\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&query=${normalizedQuery}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n\nexport const getMoviebyId = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n   console.error('Sorry, something went wrong!');\n  }\n};\n","import styled from 'styled-components';\n\nexport const StyledCastList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  flex-basis: calc(33% - 5px);\n`;\n\nexport const StyledPhoto = styled.img`\n  display: block;\n  border-radius: 3px;\n`;\n","import { useEffect } from 'react';\nimport { getMovieCast } from 'API/MovieDB';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Item, StyledCastList, StyledPhoto } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  const photoUrl = `https://image.tmdb.org/t/p/original`;\n\n  return (\n    <div>\n      <StyledCastList>\n        {cast.map(actor => {\n          const { character, name, id, profile_path } = actor;\n          const photo =\n            profile_path !== null\n              ? `${photoUrl}${profile_path}`\n              : 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n          return (\n            <Item key={id}>\n              <StyledPhoto\n                src={`${photo}`}\n                alt={name}\n                width=\"150\"\n              ></StyledPhoto>\n              {` ${name} as ${character}`}\n            </Item>\n          );\n        })}\n      </StyledCastList>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","KEY","getTrendingMovies","axios","response","data","results","console","error","getMovieByKey","query","normalizedQuery","trim","toLowerCase","getMoviebyId","id","getMovieCast","cast","getMovieReviews","StyledCastList","styled","Item","StyledPhoto","useState","setCast","movieId","useParams","useEffect","then","map","actor","character","name","profile_path","photo","src","alt","width"],"sourceRoot":""}